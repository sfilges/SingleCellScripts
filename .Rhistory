maxGSSize = maxGSSize, qvalueCutoff = qvalueCutoff, USER_DATA = USER_DATA)
}
body(enricher)<-body(enricher_edit)
environment(enricher_custom)<-environment(clusterProfiler:::enricher_internal)
kegg <- read.gmt("~/GitHub/SingleCellScripts/data/MSigDB/c2.cp.kegg.v7.1.symbols.gmt")
cgp <- read.gmt("~/GitHub/SingleCellScripts/data/MSigDB/c2.cgp.v7.1.symbols.gmt")
hgnc_symbols <- read.csv("~/GitHub/SingleCellScripts/data/MSigDB/hgnc.txt", sep = '\t', header=TRUE)
hgnc_symbols <- hgnc_symbols$Approved.symbol
for(i in c(1,2,3,4)) {
gene <- t %>% dplyr::filter(cluster == i)
egmt <- enricher(
gene$gene,
TERM2GENE=cgp,
pvalueCutoff = 0.1,
pAdjustMethod = 'fdr',
minGSSize = NA,
maxGSSize = NA,
qvalueCutoff = 0.05,
universe = hgnc_symbols
)
cgp_dotplot <- custom_dotplot(egmt, x.axis = "qvalue")
egmt <- enricher(
gene$gene,
TERM2GENE=kegg,
pvalueCutoff = 0.1,
pAdjustMethod = 'fdr',
minGSSize = NA,
maxGSSize = NA,
qvalueCutoff = 0.05,
universe = hgnc_symbols
)
kegg_dotplot <- custom_dotplot(egmt, x.axis = "qvalue")
pdf(file = paste("~/GitHub/SingleCellScripts/figures/","enrichment_cluster_", i,".pdf", sep=""))
cgp_dotplot + kegg_dotplot
dev.off()
}
cgp_dotplot + kegg_dotplot
plot <- cgp_dotplot + kegg_dotplot
pdf(file = paste("~/GitHub/SingleCellScripts/figures/","enrichment_cluster_", i,".pdf", sep=""))
plot
dev.off()
pdf(
file = paste("~/GitHub/SingleCellScripts/figures/","enrichment_cluster_", i,".pdf", sep=""),
width = 12,
height = 6
)
plot
dev.off()
for(i in c(1,2,3,4)) {
gene <- t %>% dplyr::filter(cluster == i)
egmt <- enricher(
gene$gene,
TERM2GENE=cgp,
pvalueCutoff = 0.1,
pAdjustMethod = 'fdr',
minGSSize = NA,
maxGSSize = NA,
qvalueCutoff = 0.05,
universe = hgnc_symbols
)
cgp_dotplot <- custom_dotplot(egmt, x.axis = "qvalue")
egmt <- enricher(
gene$gene,
TERM2GENE=kegg,
pvalueCutoff = 0.1,
pAdjustMethod = 'fdr',
minGSSize = NA,
maxGSSize = NA,
qvalueCutoff = 0.05,
universe = hgnc_symbols
)
kegg_dotplot <- custom_dotplot(egmt, x.axis = "qvalue")
plot <- cgp_dotplot + kegg_dotplot
pdf(
file = paste("~/GitHub/SingleCellScripts/figures/","enrichment_cluster_", i,".pdf", sep=""),
width = 12,
height = 6
)
plot
dev.off()
}
pdf(
file = paste("~/GitHub/SingleCellScripts/figures/","enrichment_cluster_", i,".pdf", sep=""),
width = 12,
height = 6
)
plot
dev.off()
rep(4)
1:4
for(i in 1:4) {
gene <- t %>% dplyr::filter(cluster == i)
egmt <- enricher(
gene$gene,
TERM2GENE=cgp,
pvalueCutoff = 0.1,
pAdjustMethod = 'fdr',
minGSSize = NA,
maxGSSize = NA,
qvalueCutoff = 0.05,
universe = hgnc_symbols
)
cgp_dotplot <- custom_dotplot(egmt, x.axis = "qvalue")
egmt <- enricher(
gene$gene,
TERM2GENE=kegg,
pvalueCutoff = 0.1,
pAdjustMethod = 'fdr',
minGSSize = NA,
maxGSSize = NA,
qvalueCutoff = 0.05,
universe = hgnc_symbols
)
kegg_dotplot <- custom_dotplot(egmt, x.axis = "qvalue")
plot <- cgp_dotplot + kegg_dotplot
pdf(
file = paste("~/GitHub/SingleCellScripts/figures/","enrichment_cluster_", i,".pdf", sep=""),
width = 12,
height = 6
)
plot
dev.off()
}
t
t %>% dplyr::filter(cluster == i)
t %>% dplyr::filter(cluster == 1)
paste("~/GitHub/SingleCellScripts/figures/","enrichment_cluster_", i,".pdf", sep="")
for(i in 1:4) {print(i)}
for(i in 1:4) {
gene <- t %>% dplyr::filter(cluster == i)
egmt <- enricher(
gene$gene,
TERM2GENE=cgp,
pvalueCutoff = 0.1,
pAdjustMethod = 'fdr',
minGSSize = NA,
maxGSSize = NA,
qvalueCutoff = 0.05,
universe = hgnc_symbols
)
cgp_dotplot <- custom_dotplot(egmt, x.axis = "qvalue")
egmt <- enricher(
gene$gene,
TERM2GENE=kegg,
pvalueCutoff = 0.1,
pAdjustMethod = 'fdr',
minGSSize = NA,
maxGSSize = NA,
qvalueCutoff = 0.05,
universe = hgnc_symbols
)
kegg_dotplot <- custom_dotplot(egmt, x.axis = "qvalue")
plot <- cgp_dotplot + kegg_dotplot
pdf(file = paste("~/GitHub/SingleCellScripts/figures/","enrichment_cluster_", i,".pdf", sep=""),width = 12,height = 6)
plot
dev.off()
}
plot <- cgp_dotplot + kegg_dotplot
pdf(file = paste("~/GitHub/SingleCellScripts/figures/","enrichment_cluster_", i,".pdf", sep=""),width = 10,height = 4)
plot
dev.off()
for(i in 1:4) {
gene <- t %>% dplyr::filter(cluster == i)
egmt <- enricher(
gene$gene,
TERM2GENE=cgp,
pvalueCutoff = 0.1,
pAdjustMethod = 'fdr',
minGSSize = NA,
maxGSSize = NA,
qvalueCutoff = 0.05,
universe = hgnc_symbols
)
cgp_dotplot <- custom_dotplot(egmt, x.axis = "qvalue")
egmt <- enricher(
gene$gene,
TERM2GENE=kegg,
pvalueCutoff = 0.1,
pAdjustMethod = 'fdr',
minGSSize = NA,
maxGSSize = NA,
qvalueCutoff = 0.05,
universe = hgnc_symbols
)
kegg_dotplot <- custom_dotplot(egmt, x.axis = "qvalue")
plot <- cgp_dotplot + kegg_dotplot
pdf(file = paste("enrichment_cluster_", i,".pdf", sep=""),width = 12,height = 6)
plot
dev.off()
}
enrichment_plot <- function(cluster){
gene <- t %>% dplyr::filter(cluster == cluster)
egmt <- enricher(
gene$gene,
TERM2GENE=cgp,
pvalueCutoff = 0.1,
pAdjustMethod = 'fdr',
minGSSize = NA,
maxGSSize = NA,
qvalueCutoff = 0.05,
universe = hgnc_symbols
)
cgp_dotplot <- custom_dotplot(egmt, x.axis = "qvalue")
egmt <- enricher(
gene$gene,
TERM2GENE=kegg,
pvalueCutoff = 0.1,
pAdjustMethod = 'fdr',
minGSSize = NA,
maxGSSize = NA,
qvalueCutoff = 0.05,
universe = hgnc_symbols
)
kegg_dotplot <- custom_dotplot(egmt, x.axis = "qvalue")
plot <- cgp_dotplot + kegg_dotplot
return(plot)
}
enrichment_plot(1)
enrichment_plot(2)
pdf(file = paste("enrichment_cluster_1",".pdf", sep=""),width = 12,height = 6)
enrichment_plot(1)
dev.off()
pdf(file = paste("enrichment_cluster_2",".pdf", sep=""),width = 12,height = 6)
enrichment_plot(2)
dev.off()
pdf(file = paste("enrichment_cluster_3",".pdf", sep=""),width = 12,height = 6)
enrichment_plot(3)
dev.off()
pdf(file = paste("enrichment_cluster_4",".pdf", sep=""),width = 12,height = 6)
enrichment_plot(4)
dev.off()
enrichment_plot(3)
enrichment_plot(4)
enrichment_plot <- function(data, cluster){
gene <- data %>% dplyr::filter(cluster == cluster)
egmt <- enricher(
gene$gene,
TERM2GENE=cgp,
pvalueCutoff = 0.1,
pAdjustMethod = 'fdr',
minGSSize = NA,
maxGSSize = NA,
qvalueCutoff = 0.05,
universe = hgnc_symbols
)
cgp_dotplot <- custom_dotplot(egmt, x.axis = "qvalue")
egmt <- enricher(
gene$gene,
TERM2GENE=kegg,
pvalueCutoff = 0.1,
pAdjustMethod = 'fdr',
minGSSize = NA,
maxGSSize = NA,
qvalueCutoff = 0.05,
universe = hgnc_symbols
)
kegg_dotplot <- custom_dotplot(egmt, x.axis = "qvalue")
plot <- cgp_dotplot + kegg_dotplot
return(plot)
}
enrichment_plot(data = t, cluster = 1)
enrichment_plot(data = t, cluster = 2)
t
data %>% dplyr::filter(cluster == 1)
t %>% dplyr::filter(cluster == 1)
t %>% dplyr::filter(cluster == 2)
custom_dotplot <- function(
egmt,
showCategory = 20,
x.axis = 'GeneRatio',
font.size = 7
){
data <- egmt@result %>%
dplyr::arrange(qvalue) %>%
dplyr::select(-geneID) %>%
tidyr::separate(GeneRatio, c("top", "bottom"), sep = "/") %>%
dplyr::mutate(GeneRatio = as.numeric(top)/as.numeric(bottom))
data <- head(data, showCategory)
data$category <- factor(data$ID, levels = rev(data$ID))
if(x.axis == 'GeneRatio') {
dp <- ggplot(
data = data,
mapping = aes(x = GeneRatio, y = category, color = -log10(qvalue))
) +
geom_point(aes(size = Count)) +
scale_color_continuous(
low="red", high="blue",
name = '-log10(qvalue)',
guide=guide_colorbar(reverse=FALSE)
) +
theme_minimal() +
theme(
axis.line = element_line(color="black", size = 0.2),
axis.title.y = element_blank(),
axis.text.y = element_text(size = font.size)
) + guides(size = guide_legend(reverse = TRUE))
} else if (x.axis == 'qvalue'){
dp <- ggplot(
data = data,
mapping = aes(x = -log10(qvalue), y = category, color = GeneRatio)
) +
geom_point(aes(size = Count)) +
scale_color_continuous(
low="red", high="blue",
name = 'GeneRatio',
guide=guide_colorbar(reverse=FALSE)
) +
theme_minimal() +
theme(
axis.line = element_line(color="black", size = 0.2),
axis.title.y = element_blank(),
axis.text.y = element_text(size = font.size)
) + guides(size = guide_legend(reverse = TRUE))
}
return(dp)
}
enricher_custom <- function(
gene,
pvalueCutoff,
pAdjustMethod = "BH",
universe = NULL,
minGSSize = 10,
maxGSSize = 500,
qvalueCutoff = 0.2,
USER_DATA) {
gene <- as.character(unique(gene))
qExtID2TermID <- EXTID2TERMID(gene, USER_DATA)
qTermID <- unlist(qExtID2TermID)
if (is.null(qTermID)) {
message("--> No gene can be mapped....")
p2e <- get("PATHID2EXTID", envir = USER_DATA)
sg <- unlist(p2e[1:10])
sg <- sample(sg, min(length(sg), 6))
message("--> Expected input gene ID: ", paste0(sg, collapse = ","))
message("--> return NULL...")
return(NULL)
}
qExtID2TermID.df <- data.frame(
extID = rep(names(qExtID2TermID),
times = lapply(qExtID2TermID, length)),
termID = qTermID
)
qExtID2TermID.df <- unique(qExtID2TermID.df)
qTermID2ExtID <- with(
qExtID2TermID.df, split(as.character(extID),as.character(termID))
)
extID <- ALLEXTID(USER_DATA)
if (missing(universe))
universe <- NULL
if (!is.null(universe)) {
extID <- as.character(universe)
}
qTermID2ExtID <- lapply(qTermID2ExtID, intersect, extID)
qTermID <- unique(names(qTermID2ExtID))
termID2ExtID <- TERMID2EXTID(qTermID, USER_DATA)
termID2ExtID <- lapply(termID2ExtID, intersect, extID)
geneSets <- termID2ExtID
idx <- get_geneSet_index(termID2ExtID, minGSSize, maxGSSize)
if (sum(idx) == 0) {
msg <- paste("No gene set have size >", minGSSize, "...")
message(msg)
message("--> return NULL...")
return(NULL)
}
termID2ExtID <- termID2ExtID[idx]
qTermID2ExtID <- qTermID2ExtID[idx]
qTermID <- unique(names(qTermID2ExtID))
k <- sapply(qTermID2ExtID, length)
k <- k[qTermID]
M <- sapply(termID2ExtID, length)
M <- M[qTermID]
N <- rep(length(extID), length(M))
n <- rep(length(qExtID2TermID), length(M))
args.df <- data.frame(
numWdrawn = k - 1,
numW = M,
numB = N - M,
numDrawn = n
)
pvalues <- apply(
args.df, 1, function(n) phyper(n[1], n[2], n[3], n[4], lower.tail = FALSE)
)
GeneRatio <- apply(
data.frame(a = k, b = n), 1, function(x) paste(x[1], "/", x[2], sep = "", collapse = "")
)
BgRatio <- apply(
data.frame(a = M, b = N), 1, function(x) paste(x[1], "/", x[2], sep = "", collapse = "")
)
Over <- data.frame(
ID = as.character(qTermID),
GeneRatio = GeneRatio,
BgRatio = BgRatio,
pvalue = pvalues,
stringsAsFactors = FALSE
)
p.adj <- p.adjust(Over$pvalue, method = pAdjustMethod)
qobj <- tryCatch(qvalue(p = Over$pvalue,
lambda = 0.05,
pi0.method = "bootstrap"),
error = function(e) NULL)
if (class(qobj) == "qvalue") {
qvalues <- qobj$qvalues
}
else {
qvalues <- NA
}
geneID <- sapply(qTermID2ExtID, function(i) paste(i, collapse = "/"))
geneID <- geneID[qTermID]
Over <- data.frame(
Over,
p.adjust = p.adj,
qvalue = qvalues,
geneID = geneID,
Count = k,
stringsAsFactors = FALSE
)
Description <- TERM2NAME(qTermID, USER_DATA)
if (length(qTermID) != length(Description)) {
idx <- qTermID %in% names(Description)
Over <- Over[idx, ]
}
Over$Description <- Description
nc <- ncol(Over)
Over <- Over[, c(1, nc, 2:(nc - 1))]
Over <- Over[order(pvalues), ]
Over$ID <- as.character(Over$ID)
Over$Description <- as.character(Over$Description)
row.names(Over) <- as.character(Over$ID)
x <- new("enrichResult", result = Over, pvalueCutoff = pvalueCutoff,
pAdjustMethod = pAdjustMethod, qvalueCutoff = qvalueCutoff,
gene = as.character(gene), universe = extID, geneSets = geneSets,
organism = "UNKNOWN", keytype = "UNKNOWN", ontology = "UNKNOWN",
readable = FALSE)
return(x)
}
enricher_edit<-function(gene, pvalueCutoff = 0.05, pAdjustMethod = "BH", universe,
minGSSize = 10, maxGSSize = 500, qvalueCutoff = 0.2, TERM2GENE,
TERM2NAME = NA)
{
USER_DATA <- build_Anno(TERM2GENE, TERM2NAME)
enricher_custom(gene = gene, pvalueCutoff = pvalueCutoff,
pAdjustMethod = pAdjustMethod, universe = universe, minGSSize = minGSSize,
maxGSSize = maxGSSize, qvalueCutoff = qvalueCutoff, USER_DATA = USER_DATA)
}
body(enricher)<-body(enricher_edit)
environment(enricher_custom)<-environment(clusterProfiler:::enricher_internal)
kegg <- read.gmt("~/GitHub/SingleCellScripts/data/MSigDB/c2.cp.kegg.v7.1.symbols.gmt")
cgp <- read.gmt("~/GitHub/SingleCellScripts/data/MSigDB/c2.cgp.v7.1.symbols.gmt")
hgnc_symbols <- read.csv("~/GitHub/SingleCellScripts/data/MSigDB/hgnc.txt", sep = '\t', header=TRUE)
hgnc_symbols <- hgnc_symbols$Approved.symbol
enrichment_plot <- function(data, cluster){
gene <- data %>% dplyr::filter(cluster == cluster)
egmt <- enricher(
gene$gene,
TERM2GENE=cgp,
pvalueCutoff = 0.1,
pAdjustMethod = 'fdr',
minGSSize = NA,
maxGSSize = NA,
qvalueCutoff = 0.05,
universe = hgnc_symbols
)
cgp_dotplot <- custom_dotplot(egmt, x.axis = "qvalue")
egmt <- enricher(
gene$gene,
TERM2GENE=kegg,
pvalueCutoff = 0.1,
pAdjustMethod = 'fdr',
minGSSize = NA,
maxGSSize = NA,
qvalueCutoff = 0.05,
universe = hgnc_symbols
)
kegg_dotplot <- custom_dotplot(egmt, x.axis = "qvalue")
plot <- cgp_dotplot + kegg_dotplot
return(plot)
}
enrichment_plot(data = t, cluster = 2)
enrichment_plot(data = t, cluster = 3)
enrichment_plot <- function(data, cluster){
gene <- data %>% dplyr::filter(cluster == cluster)
kegg <- read.gmt("~/GitHub/SingleCellScripts/data/MSigDB/c2.cp.kegg.v7.1.symbols.gmt")
cgp <- read.gmt("~/GitHub/SingleCellScripts/data/MSigDB/c2.cgp.v7.1.symbols.gmt")
hgnc_symbols <- read.csv("~/GitHub/SingleCellScripts/data/MSigDB/hgnc.txt", sep = '\t', header=TRUE)
hgnc_symbols <- hgnc_symbols$Approved.symbol
egmt <- enricher(
gene$gene,
TERM2GENE=cgp,
pvalueCutoff = 0.1,
pAdjustMethod = 'fdr',
minGSSize = NA,
maxGSSize = NA,
qvalueCutoff = 0.05,
universe = hgnc_symbols
)
cgp_dotplot <- custom_dotplot(egmt, x.axis = "qvalue")
egmt <- enricher(
gene$gene,
TERM2GENE=kegg,
pvalueCutoff = 0.1,
pAdjustMethod = 'fdr',
minGSSize = NA,
maxGSSize = NA,
qvalueCutoff = 0.05,
universe = hgnc_symbols
)
kegg_dotplot <- custom_dotplot(egmt, x.axis = "qvalue")
plot <- cgp_dotplot + kegg_dotplot
return(plot)
}
enrichment_plot(data = t, cluster = 1)
enrichment_plot(data = t, cluster = 2)
